name: Docker Image CI

on:
  workflow_dispatch:

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - uses: azure/docker-login@v1
      with:
        login-server: ghcr.io
        username: ${{ secrets.GH_PACKAGES_USER }}
        password: ${{ secrets.GH_PACKAGES_TOKEN }}
        
    - name: Build the Docker image
      run: |
       docker build . --file Dockerfile --tag ghcr.io/julioarruda/sample01:${{ github.sha }}
       docker tag ghcr.io/julioarruda/sample01:${{ github.sha }} ghcr.io/julioarruda/sample01:latest
     
     
    - name: Docker Push
      run: |
       docker push ghcr.io/julioarruda/sample01:${{ github.sha }}
       docker push ghcr.io/julioarruda/sample01:latest

    - uses: chrnorm/deployment-action@releases/v1
      name: Create GitHub deployment
      id: deployment
      with:
        token: "${{ secrets.GH_PACKAGES_TOKEN }}"
        target_url: http://my-app-url.com
        environment: production

    - uses: azure/webapps-deploy@v2
      with:
        app-name: 'demoteste01923'
        publish-profile: ${{ secrets.azureWebAppPublishProfile }}
        images: 'ghcr.io/julioarruda/sample01:${{ github.sha }}'

    - name: Update deployment status (success)
      if: success()
      uses: chrnorm/deployment-status@releases/v1
      with:
        token: "${{ secrets.GH_PACKAGES_TOKEN }}"
        target_url: http://my-app-url.com
        state: "success"
        deployment_id: ${{ steps.deployment.outputs.deployment_id }}

    - name: Update deployment status (failure)
      if: failure()
      uses: chrnorm/deployment-status@releases/v1
      with:
        token: "${{ secrets.GH_PACKAGES_TOKEN }}"
        target_url: http://my-app-url.com
        state: "failure"
        deployment_id: ${{ steps.deployment.outputs.deployment_id }}